name: CI and Release

on:
  push:
    branches:
      - "**" # Run on all branches
    tags:
      - "*" # Trigger on new tags
  pull_request:
    branches:
      - "**" # Trigger on PRs to any branch

permissions:
  contents: write

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Go version from go.mod
        id: go-version
        run: echo "GO_VERSION=$(grep '^go ' go.mod | awk '{print $2}')" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Go Mod Tidy
        run: go mod tidy

      - name: Check for Uncommitted Changes
        run: git diff --exit-code || (echo "Please run 'go mod tidy' to clean up the 'go.mod' and 'go.sum' files. Your go version should match the one used with travis." && exit 1)

      - name: Run Go Vet
        run: go vet ./...

      - name: Run Go Tests
        run: go test ./...
        
      - name: Install Staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run Staticcheck
        run: staticcheck --checks="all,-ST1000,-ST1022,-ST1020,-ST1003" ./...

      - name: Check GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: check

  release:
    runs-on: ubuntu-latest
    needs: checks # Ensure the checks job completes successfully before releasing
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install typescript
        run: make install-typescript

      - name: Install packr
        run: make install-packr

      - name: Install packr
        run: go install github.com/gobuffalo/packr/v2/packr2@latest

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
